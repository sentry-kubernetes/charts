{{- if .Values.snuba.groupAttributesConsumer.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sentry.fullname" . }}-snuba-group-attributes-consumer
  labels:
    app: {{ template "sentry.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: "Helm"
  {{- if .Values.asHook }}
  {{- /* Add the Helm annotations so that deployment after asHook from true to false works */}}
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "12"
  {{- end }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: snuba-group-attributes-consumer
  replicas: {{ .Values.snuba.groupAttributesConsumer.replicas }}
  template:
    metadata:
      annotations:
        checksum/snubaSettingsPy: {{ .Values.config.snubaSettingsPy | sha256sum }}
        checksum/config.yaml: {{ include "sentry.snuba.config" . | sha256sum }}
        {{- if .Values.snuba.groupAttributesConsumer.annotations }}
{{ toYaml .Values.snuba.groupAttributesConsumer.annotations | indent 8 }}
        {{- end }}
      labels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: snuba-group-attributes-consumer
        {{- if .Values.snuba.groupAttributesConsumer.podLabels }}
{{ toYaml .Values.snuba.groupAttributesConsumer.podLabels | indent 8 }}
        {{- end }}
    spec:
      affinity:
      {{- if .Values.snuba.groupAttributesConsumer.affinity }}
{{ toYaml .Values.snuba.groupAttributesConsumer.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.snuba.groupAttributesConsumer.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.snuba.groupAttributesConsumer.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.snuba.groupAttributesConsumer.tolerations }}
      tolerations:
{{ toYaml .Values.snuba.groupAttributesConsumer.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.snuba.groupAttributesConsumer.topologySpreadConstraints }}
      topologySpreadConstraints:
{{ toYaml .Values.snuba.groupAttributesConsumer.topologySpreadConstraints | indent 8 }}
      {{- end }}
      {{- if .Values.images.snuba.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.images.snuba.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
      {{- end }}
      {{- if .Values.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      {{- end }}
      {{- if .Values.snuba.groupAttributesConsumer.securityContext }}
      securityContext:
{{ toYaml .Values.snuba.groupAttributesConsumer.securityContext | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-snuba
        image: "{{ template "snuba.image" . }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.images.snuba.pullPolicy }}
        command:
          - "snuba"
          - {{ if .Values.snuba.rustConsumer -}}"rust-consumer"{{- else -}}"consumer"{{- end }}
          - "--storage"
          - "group_attributes"
          - "--consumer-group"
          - "snuba-group-attributes-group"
          - "--auto-offset-reset"
          - "{{ .Values.snuba.groupAttributesConsumer.autoOffsetReset }}"
          - "--max-batch-time-ms"
          - "750"
          {{- if .Values.snuba.groupAttributesConsumer.maxBatchSize }}
          - "--max-batch-size"
          - "{{ .Values.snuba.groupAttributesConsumer.maxBatchSize }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.processes }}
          - "--processes"
          - "{{ .Values.snuba.groupAttributesConsumer.processes }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.inputBlockSize }}
          - "--input-block-size"
          - "{{ .Values.snuba.groupAttributesConsumer.inputBlockSize }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.outputBlockSize }}
          - "--output-block-size"
          - "{{ .Values.snuba.groupAttributesConsumer.outputBlockSize }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.maxBatchTimeMs }}
          - "--max-batch-time-ms"
          - "{{ .Values.snuba.groupAttributesConsumer.maxBatchTimeMs }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.queuedMaxMessagesKbytes }}
          - "--queued-max-messages-kbytes"
          - "{{ .Values.snuba.groupAttributesConsumer.queuedMaxMessagesKbytes }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.queuedMinMessages }}
          - "--queued-min-messages"
          - "{{ .Values.snuba.groupAttributesConsumer.queuedMinMessages }}"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.noStrictOffsetReset }}
          - "--no-strict-offset-reset"
          {{- end }}
          {{- if .Values.snuba.groupAttributesConsumer.livenessProbe.enabled }}
          - "--health-check-file"
          - "/tmp/health.txt"
          {{- end }}
        {{- if .Values.snuba.groupAttributesConsumer.livenessProbe.enabled }}
        livenessProbe:
          exec:
            command:
              - rm
              - /tmp/health.txt
          initialDelaySeconds: {{ .Values.snuba.groupAttributesConsumer.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.snuba.groupAttributesConsumer.livenessProbe.periodSeconds }}
        {{- end }}
        ports:
        - containerPort: {{ template "snuba.port" }}
        env:
{{ include "sentry.snuba.env" . | indent 8 }}
{{- if .Values.snuba.groupAttributesConsumer.env }}
{{ toYaml .Values.snuba.groupAttributesConsumer.env | indent 8 }}
{{- end }}
        envFrom:
        - secretRef:
            name: {{ template "sentry.fullname" . }}-snuba-env
        volumeMounts:
        - mountPath: /etc/snuba
          name: config
          readOnly: true
{{- if .Values.snuba.groupAttributesConsumer.volumeMounts }}
{{ toYaml .Values.snuba.groupAttributesConsumer.volumeMounts | indent 8 }}
{{- end }}
        resources:
{{ toYaml .Values.snuba.groupAttributesConsumer.resources | indent 12 }}
{{- if .Values.snuba.groupAttributesConsumer.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.snuba.groupAttributesConsumer.containerSecurityContext | indent 12 }}
{{- end }}
{{- if .Values.snuba.groupAttributesConsumer.sidecars }}
{{ toYaml .Values.snuba.groupAttributesConsumer.sidecars | indent 6 }}
{{- end }}
{{- if .Values.global.sidecars }}
{{ toYaml .Values.global.sidecars | indent 6 }}
{{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}-snuba
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "sentry.fullname" . }}-snuba
{{- if .Values.snuba.groupAttributesConsumer.volumes }}
{{ toYaml .Values.snuba.groupAttributesConsumer.volumes | indent 8 }}
{{- end }}
{{- if .Values.global.volumes }}
{{ toYaml .Values.global.volumes | indent 8 }}
{{- end }}
{{- end }}
