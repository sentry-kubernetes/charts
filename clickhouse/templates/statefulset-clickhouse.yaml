apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "clickhouse.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "clickhouse.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.clickhouse.replicas }}
  podManagementPolicy: {{ .Values.clickhouse.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.clickhouse.updateStrategy }}
    {{- if (eq "Recreate" .Values.clickhouse.updateStrategy) }}
    rollingUpdate: null
    {{- else if .Values.clickhouse.rollingUpdatePartition }}
    rollingUpdate:
      partition: {{ .Values.clickhouse.rollingUpdatePartition }}
    {{- end }}
  serviceName: {{ include "clickhouse.fullname" . }}-headless
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "clickhouse.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-config.yaml") . | sha256sum }}
      {{- if and .Values.clickhouse.metrics.enabled .Values.clickhouse.metrics.podAnnotations }}
      {{- toYaml .Values.clickhouse.metrics.podAnnotations | nindent 8 }}
      {{- end }}
      {{- if .Values.clickhouse.podAnnotations }}
      {{- range $key, $value := .Values.clickhouse.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
      labels:
        app.kubernetes.io/name: {{ include "clickhouse.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- if and .Values.clickhouse.metrics.enabled .Values.clickhouse.metrics.podLabels }}
      {{- toYaml .Values.clickhouse.metrics.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.clickhouse.podLabels }}
      {{- range $key, $value := .Values.clickhouse.podLabels }}
        {{ $key }}: {{ $value | quote }}
      {{- end }}
      {{- end }}
    spec:
    {{- with .Values.clickhouse.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
    {{- end }}
    {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
    {{- end }}
    {{- if .Values.clickhouse.imagePullSecrets }}
      imagePullSecrets:
    {{- range .Values.clickhouse.imagePullSecrets }}
      - name: {{ . | quote }}
    {{- end }}
    {{- end }}
      containers:
      - name: {{ include "clickhouse.fullname" . }}
        image: {{ .Values.clickhouse.image }}:{{ .Values.clickhouse.imageVersion }}
        imagePullPolicy: {{ .Values.clickhouse.imagePullPolicy }}
        command:
          - /bin/bash
          - -c
          - export SHARD=${HOSTNAME##*-} && /entrypoint.sh
        ports:
        - name: http-port
          containerPort: {{ .Values.clickhouse.http_port | default "8123" }}
        - name: tcp-port
          containerPort: {{ .Values.clickhouse.tcp_port | default "9000" }}
        - name: inter-http-port
          containerPort: {{ .Values.clickhouse.interserver_http_port | default "9009" }}
      {{- if .Values.clickhouse.livenessProbe.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.clickhouse.tcp_port }}
          initialDelaySeconds: {{ .Values.clickhouse.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.clickhouse.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.clickhouse.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.clickhouse.livenessProbe.failureThreshold }}
          successThreshold: {{ .Values.clickhouse.livenessProbe.successThreshold }}
      {{- end }}
      {{- if .Values.clickhouse.readinessProbe.enabled }}
        readinessProbe:
          tcpSocket:
            port: {{ .Values.clickhouse.tcp_port }}
          initialDelaySeconds: {{ .Values.clickhouse.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.clickhouse.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.clickhouse.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.clickhouse.readinessProbe.failureThreshold }}
          successThreshold: {{ .Values.clickhouse.readinessProbe.successThreshold }}
      {{- end }}
      {{- if .Values.clickhouse.resources }}
        resources:
{{ toYaml .Values.clickhouse.resources | indent 10 }}
      {{- end }}
        volumeMounts:
        - name: {{ include "clickhouse.fullname" . }}-data
          mountPath: {{ include "clickhouse.fullpath" . }}
        - name: {{ include "clickhouse.fullname" . }}-logs
          mountPath: {{ include "clickhouse.logpath" . }}
        - name: {{ include "clickhouse.fullname" . }}-config
          mountPath: /etc/clickhouse-server/config.d
        - name: {{ include "clickhouse.fullname" . }}-metrica
          mountPath: /etc/clickhouse-server/metrica.d
        - name: {{ include "clickhouse.fullname" . }}-users
          mountPath: /etc/clickhouse-server/users.d
{{- if .Values.clickhouse.volumeMounts }}
{{ toYaml .Values.clickhouse.volumeMounts | indent 8 }}
{{- end }}
      {{- with .Values.clickhouse.securityContext }}
        securityContext:
          {{- toYaml . | nindent 10 }}
      {{- end }}
      {{- if .Values.clickhouse.metrics.enabled }}
      - name: prom-exporter
        image: "{{ .Values.clickhouse.metrics.image.registry }}/{{ .Values.clickhouse.metrics.image.repository }}:{{ .Values.clickhouse.metrics.image.tag }}"
        imagePullPolicy: {{ .Values.clickhouse.metrics.image.pullPolicy | quote }}
        ports:
          - name: metrics
            containerPort: {{ .Values.clickhouse.metrics.image.port }}
            protocol: TCP
{{- if .Values.clickhouse.metrics.volumeMounts }}
        volumeMounts:
{{ toYaml .Values.clickhouse.metrics.volumeMounts | indent 8 }}
{{- end }}
        {{- if .Values.clickhouse.metrics.resources }}
        resources: {{- toYaml .Values.clickhouse.metrics.resources | nindent 10 }}
      {{- end }}
      {{- end }}
    {{- if .Values.clickhouse.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.clickhouse.nodeSelector | indent 8 }}
    {{- end }}
      volumes:
      - name: {{ include "clickhouse.fullname" . }}-data
      {{- if .Values.clickhouse.persistentVolumeClaim.dataPersistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "clickhouse.fullname" . }}-data
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: {{ include "clickhouse.fullname" . }}-logs
      {{- if .Values.clickhouse.persistentVolumeClaim.logsPersistentVolume.enabled }}
        persistentVolumeClaim:
          claimName: {{ include "clickhouse.fullname" . }}-logs
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.clickhouse.configmap.enabled }}
      - name: {{ include "clickhouse.fullname" . }}-config
        configMap:
          name: {{ include "clickhouse.fullname" . }}-config
          items:
          - key: config.xml
            path: config.xml
      - name: {{ include "clickhouse.fullname" . }}-metrica
        configMap:
          name: {{ include "clickhouse.fullname" . }}-metrica
          items:
          - key: metrica.xml
            path: metrica.xml
      - name: {{ include "clickhouse.fullname" . }}-users
        configMap:
          name: {{ include "clickhouse.fullname" . }}-users
          items:
          - key: users.xml
            path: users.xml
      {{- end }}
{{- if .Values.clickhouse.volumes }}
{{ toYaml .Values.clickhouse.volumes | indent 6 }}
{{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
{{- if .Values.clickhouse.persistentVolumeClaim.enabled }}
  volumeClaimTemplates:
{{- if .Values.clickhouse.persistentVolumeClaim.dataPersistentVolume.enabled }}
  - metadata:
      name: {{ include "clickhouse.fullname" . }}-data
      labels:
        app.kubernetes.io/name: {{ include "clickhouse.name" . }}-data
        app.kubernetes.io/instance: {{ .Release.Name }}-data
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
    {{- range .Values.clickhouse.persistentVolumeClaim.dataPersistentVolume.accessModes }}
      - {{ . | quote }}
    {{- end }}
    {{- if .Values.clickhouse.persistentVolumeClaim.dataPersistentVolume.storageClassName }}
      storageClassName: {{ .Values.clickhouse.persistentVolumeClaim.dataPersistentVolume.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.clickhouse.persistentVolumeClaim.dataPersistentVolume.storage | quote }}
{{- end }}
{{- if .Values.clickhouse.persistentVolumeClaim.logsPersistentVolume.enabled }}
  - metadata:
      name: {{ include "clickhouse.fullname" . }}-logs
      labels:
        app.kubernetes.io/name: {{ include "clickhouse.name" . }}-logs
        app.kubernetes.io/instance: {{ .Release.Name }}-logs
        app.kubernetes.io/managed-by: {{ .Release.Service }}
    spec:
      accessModes:
    {{- range .Values.clickhouse.persistentVolumeClaim.logsPersistentVolume.accessModes }}
      - {{ . | quote }}
    {{- end }}
    {{- if (eq "-" .Values.clickhouse.persistentVolumeClaim.logsPersistentVolume.storageClassName) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.clickhouse.persistentVolumeClaim.logsPersistentVolume.storageClassName | quote }}
    {{- end }}
      resources:
        requests:
          storage: {{ .Values.clickhouse.persistentVolumeClaim.logsPersistentVolume.storage | quote }}
{{- end }}
{{- end }}
