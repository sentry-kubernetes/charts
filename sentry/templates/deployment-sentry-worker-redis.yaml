{{- if not .Values.rabbitmq.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sentry.prefix" . }}sentry-worker-redis
  labels:
    app: sentry
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  selector:
    matchLabels:
        app: sentry
        release: "{{ .Release.Name }}"
        role: sentry-worker-redis
  replicas: {{ .Values.sentry.workerRedis.replicas }}
  template:
    metadata:
      annotations:
        checksum/configYml: {{ .Values.config.yaml | sha256sum }}
        checksum/sentryConfPy: {{ .Values.config.py | sha256sum }}
        checksum/config.yaml: {{ include (print $.Template.BasePath "/configmap-sentry.yaml") . | sha256sum }}
        {{- if .Values.sentry.workerRedis.annotations }}
{{ toYaml .Values.sentry.workerRedis.annotations | indent 8 }}
        {{- end }}
      labels:
        app: sentry
        release: "{{ .Release.Name }}"
        role: sentry-worker-redis
        {{- if .Values.sentry.workerRedis.podLabels }}
{{ toYaml .Values.sentry.workerRedis.podLabels | indent 8 }}
        {{- end }}
    spec:
      affinity:
      {{- if .Values.sentry.workerRedis.affinity }}
{{ toYaml .Values.sentry.workerRedis.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.sentry.workerRedis.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.sentry.workerRedis.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.sentry.workerRedis.tolerations }}
      tolerations:
{{ toYaml .Values.sentry.workerRedis.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.images.sentry.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.images.sentry.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-worker
        image: "{{ .Values.images.sentry.repository }}:{{ .Values.images.sentry.tag }}"
        imagePullPolicy: {{ .Values.images.sentry.pullPolicy }}
        command: ["sentry"]
        args:
          - "run"
          - "worker"
          {{- if .Values.sentry.workerRedis.concurrency }}
          - "-c"
          - "{{ .Values.sentry.workerRedis.concurrency }}"
          {{- end }}
        env:
          - name: SNUBA
            value: http://{{ template "sentry.prefix" . }}snuba:{{ template "snuba.port" }}
          - name: C_FORCE_ROOT
            value: "true"
          - name: BROKER_URL
          {{ if .Values.redis.password }}
            value: redis://:{{ .Values.redis.password }}@{{ .Values.redis.host }}:6379/0
          {{ else }}
            value: redis://{{ .Values.redis.host }}:6379/0
          {{ end }}  
        {{ if eq .Values.filestore.backend "gcs" }}
          - name: GOOGLE_APPLICATION_CREDENTIALS
            value: /var/run/secrets/google/{{ .Values.filestore.gcs.credentialsFile }}
        {{ end }}
{{- if .Values.sentry.workerRedis.env }}
{{ toYaml .Values.sentry.workerRedis.env | indent 8 }}
{{- end }}
        volumeMounts:
        - mountPath: /etc/sentry
          name: config
          readOnly: true
        - mountPath: {{ .Values.filestore.filesystem.path }}
          name: sentry-data
        {{- if eq .Values.filestore.backend "gcs" }}
        - name: sentry-google-cloud-key
          mountPath: /var/run/secrets/google
        {{ end }}
        resources:
{{ toYaml .Values.sentry.workerRedis.resources | indent 12 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "sentry.prefix" . }}sentry
      - name: sentry-data
      {{- if and (eq .Values.filestore.backend "filesystem") .Values.filestore.filesystem.persistence.enabled (.Values.filestore.filesystem.persistence.persistentWorkers) }}
        persistentVolumeClaim:
          claimName: {{ .Values.filestore.filesystem.persistence.existingClaim | default (include "sentry.fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{ end }}
      {{- if eq .Values.filestore.backend "gcs" }}
      - name: sentry-google-cloud-key
        secret:
          secretName: {{ .Values.filestore.gcs.secretName }}
      {{ end }}
      {{- if .Values.sentry.workerRedis.priorityClassName }}
      priorityClassName: "{{ .Values.sentry.workerRedis.priorityClassName }}"
      {{- end }}
{{- end }}
