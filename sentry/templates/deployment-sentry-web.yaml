apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sentry.fullname" . }}-web
  labels:
    app: {{ template "sentry.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.sentry.web.strategyType }}
  selector:
    matchLabels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: web
{{- if not .Values.sentry.web.autoscaling.enabled }}
  replicas: {{ .Values.sentry.web.replicas }}
{{- end }}
  template:
    metadata:
      annotations:
        checksum/configYml: {{ .Values.config.configYml | toYaml | toString | sha256sum }}
        checksum/sentryConfPy: {{ .Values.config.sentryConfPy | sha256sum }}
        checksum/config.yaml: {{ include (print $.Template.BasePath "/configmap-sentry.yaml") . | sha256sum }}
        {{- if .Values.sentry.web.annotations }}
{{ toYaml .Values.sentry.web.annotations | indent 8 }}
        {{- end }}
      labels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: web
        {{- if .Values.sentry.web.podLabels }}
{{ toYaml .Values.sentry.web.podLabels | indent 8 }}
        {{- end }}
    spec:
      affinity:
      {{- if .Values.sentry.web.affinity }}
{{ toYaml .Values.sentry.web.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.sentry.web.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.sentry.web.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.sentry.web.tolerations }}
      tolerations:
{{ toYaml .Values.sentry.web.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.images.sentry.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.images.sentry.imagePullSecrets | indent 8 }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
      {{- end }}
      {{- if .Values.dnsConfig }}
      dnsConfig:
{{ toYaml .Values.dnsConfig | indent 8 }}
      {{- end }}
      {{- if .Values.sentry.web.securityContext }}
      securityContext:
{{ toYaml .Values.sentry.web.securityContext | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-web
        image: "{{ template "sentry.image" . }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.images.sentry.pullPolicy }}
        command: ["sentry", "run", "web"]
        ports:
        - containerPort: {{ template "sentry.port" }}
        env:
{{ include "sentry.env" . | indent 8 }}
        {{ if .Values.sentry.web.customCA }}
        - name: REQUESTS_CA_BUNDLE
          value: /etc/pki/ca-trust/custom/{{ default "ca.crt" .Values.sentry.web.customCA.item }}
        {{ end }}
{{- if .Values.sentry.web.env }}
{{ toYaml .Values.sentry.web.env | indent 8 }}
{{- end }}
        volumeMounts:
        - mountPath: /etc/sentry
          name: config
          readOnly: true
        - mountPath: {{ .Values.filestore.filesystem.path }}
          name: sentry-data
        {{- if .Values.geodata.volumeName }}
        - name: {{ .Values.geodata.volumeName }}
          mountPath: {{ .Values.geodata.mountPath }}
        {{- end }}
        {{- if and (eq .Values.filestore.backend "gcs") .Values.filestore.gcs.secretName }}
        - name: sentry-google-cloud-key
          mountPath: /var/run/secrets/google
        {{ end }}
        {{- if .Values.sentry.web.customCA }}
        - name: custom-ca
          mountPath: /etc/pki/ca-trust/custom
        {{ end }}
{{- if .Values.sentry.web.volumeMounts }}
{{ toYaml .Values.sentry.web.volumeMounts | indent 8 }}
{{- end }}
        livenessProbe:
          failureThreshold: {{ .Values.sentry.web.probeFailureThreshold }}
          httpGet:
            path: {{ template "sentry.healthCheck.requestPath" }}
            port: {{ template "sentry.port" }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.sentry.web.probeInitialDelaySeconds }}
          periodSeconds: {{ .Values.sentry.web.probePeriodSeconds }}
          successThreshold: {{ .Values.sentry.web.probeSuccessThreshold }}
          timeoutSeconds: {{ .Values.sentry.web.probeTimeoutSeconds }}
        readinessProbe:
          failureThreshold: {{ .Values.sentry.web.probeFailureThreshold }}
          httpGet:
            path: {{ template "sentry.healthCheck.requestPath" }}
            port: {{ template "sentry.port" }}
            scheme: HTTP
          initialDelaySeconds: {{ .Values.sentry.web.probeInitialDelaySeconds }}
          periodSeconds: {{ .Values.sentry.web.probePeriodSeconds }}
          successThreshold: {{ .Values.sentry.web.probeSuccessThreshold }}
          timeoutSeconds: {{ .Values.sentry.web.probeTimeoutSeconds }}
        resources:
{{ toYaml .Values.sentry.web.resources | indent 12 }}
{{- if .Values.sentry.web.containerSecurityContext }}
        securityContext:
{{ toYaml .Values.sentry.web.containerSecurityContext | indent 12 }}
{{- end }}
{{- if .Values.sentry.web.sidecars }}
{{ toYaml .Values.sentry.web.sidecars | indent 6 }}
{{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.serviceAccount.name }}-web
      {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ template "sentry.fullname" . }}-sentry
      - name: sentry-data
      {{- if and (eq .Values.filestore.backend "filesystem") .Values.filestore.filesystem.persistence.enabled }}
      {{- if .Values.filestore.filesystem.persistence.existingClaim }}
        persistentVolumeClaim:
          claimName: {{ .Values.filestore.filesystem.persistence.existingClaim }}
      {{- else }}
        persistentVolumeClaim:
          claimName: {{ template "sentry.fullname" . }}-data
      {{- end }}
      {{- else }}
        emptyDir: {}
      {{ end }}
      {{- if and (eq .Values.filestore.backend "gcs") .Values.filestore.gcs.secretName }}
      - name: sentry-google-cloud-key
        secret:
          secretName: {{ .Values.filestore.gcs.secretName }}
      {{ end }}
      {{- if .Values.sentry.web.customCA }}
      - name: custom-ca
        secret:
{{ toYaml .Values.sentry.web.customCA | indent 10 }}
      {{ end }}
      {{- if .Values.sentry.web.priorityClassName }}
      priorityClassName: "{{ .Values.sentry.web.priorityClassName }}"
      {{- end }}
{{- if .Values.sentry.web.volumes }}
{{ toYaml .Values.sentry.web.volumes | indent 6 }}
{{- end }}
