{{- if and .Values.user.create .Values.hooks.enabled -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "sentry.fullname" . }}-user-create
  labels:
    app: sentry
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "hook-succeeded,before-hook-creation"
    "helm.sh/hook-weight": "10"
spec:
  template:
    metadata:
      name: {{ template "sentry.fullname" . }}-user-create
      annotations:
        checksum/configmap.yaml: {{ include (print $.Template.BasePath "/configmap-sentry.yaml") . | sha256sum }}
        {{- if .Values.sentry.worker.annotations }}
{{ toYaml .Values.sentry.worker.annotations | indent 8 }}
        {{- end }}
      labels:
        app: sentry
        release: "{{ .Release.Name }}"
        {{- if .Values.sentry.worker.podLabels }}
{{ toYaml .Values.sentry.worker.podLabels | indent 8 }}
        {{- end }}
    spec:
      restartPolicy: Never
      {{- if .Values.images.sentry.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.images.sentry.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: user-create-job
        image: "{{ .Values.images.sentry.repository }}:{{ .Values.images.sentry.tag }}"
        command: ["/bin/bash", "-c"]
        # Create user but do not exit 1 when user already exists (exit code 3 from createuser command)
        # https://docs.sentry.io/server/cli/createuser/
        args:
          - >
            sentry createuser \
              --no-input \
              --superuser \
              --email {{ .Values.user.email }} \
              --password {{ .Values.user.password }} || true; \
            if [ $? -eq 0 ] || [ $? -eq 3 ]; then \
              exit 0; \
            else \
              exit 1; \
            fi
        {{- if .Values.postgresql.enabled }}
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ include "sentry.postgresql.fullname" . }}
              key: postgresql-password
        {{- end }}
        volumeMounts:
        - mountPath: /etc/sentry
          name: config
          readOnly: true
        resources:
{{ toYaml .Values.hooks.dbInit.resources | indent 10 }}
      volumes:
      - name: config
        configMap:
          name: {{ template "sentry.fullname" . }}-sentry
{{- end -}}
